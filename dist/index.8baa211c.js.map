{"mappings":"AAAA,MAAMA,SAAW,CAACC,EAAkCC,EAAmBC,KACnE,MAAMC,EAAKC,SAASC,cAAcL,GAGlC,OAFAG,EAAGF,UAAYA,EACfE,EAAGG,UAAYJ,GAAW,GACnBC,GAGX,SAASI,UAAUC,EAAsBC,EAAcC,GACnD,OAAO,IAAIC,SAASC,IAChBJ,EAAQF,UAAY,GACpB,IAAIO,EAAQ,EACZ,MAAMC,EAAQ,KACND,EAAQJ,EAAKM,QACbF,IACAL,EAAQF,WAAaG,EAAKI,EAAQ,GAClCG,WAAWF,EAAOJ,IAElBE,KAGRI,WAAWF,EAAOJ,MAI1B,SAASO,UACLT,EACAC,EACAC,GAEA,OAAO,IAAIC,SAASC,IAChB,MAAMM,EAAOnB,SAAS,MAAO,iBACvBoB,EAASpB,SAAS,MAAO,gBAAiB,0BAChDmB,EAAKE,YAAYD,GACjB,MAAME,EAAStB,SAAS,MAAO,gBAAiB,IAChDmB,EAAKE,YAAYC,GACjB,MAAMC,EAAWvB,SAAS,MAAO,kBAAmB,UACpDmB,EAAKE,YAAYE,GACjBd,EAAQY,YAAYF,GACpBX,UAAUc,EAAQZ,EAAMC,GAAMa,MAAK,IAC/BX,EAAI,CAAEY,KAAML,EAAQV,KAAMY,EAAQI,OAAQH,SAKtD,MAAMI,KAAOtB,SAASuB,eAAe,YAEjCD,MACAV,YAAW,KACPC,UAAUS,KAAM,WAAY,IAAIH,MAAMK,GAClCZ,YAAW,KACPY,EAAMH,OAAOI,SACbZ,UACIS,KACA,wEACA,IACFH,MAAMO,IACJd,YAAW,KACPc,EAAML,OAAOI,SACbZ,UAAUS,KAAM,UAAW,KAAKH,MAAMQ,IAClCd,UAAUS,KAAM,GAAI,GAAGH,MAAMS,IACzBA,EAAYR,KAAKS,MAAMC,WAAa,SACpCF,EAAYP,OAAOI,SACnB,MAAMM,EAAuBpC,SACzB,SACA,sBACA,eAEJoC,EAAqBC,QAAU,KAC3BL,EAAMtB,KAAKH,UAAY,mBACvB+B,OAAOC,SAASC,KACZ,+CAGR,MAAMC,EAAmBzC,SACrB,SACA,sBACA,UAEJyC,EAAiBJ,QAAU,KACvBL,EAAMtB,KAAKH,UAAY,cACvB+B,OAAOC,SAASG,UAGpBT,EAAYvB,KAAKW,YAAYe,GAC7BH,EAAYvB,KAAKW,YAAYoB,GAE7BpC,SAASsC,iBAAiB,YAAaC,IACjB,UAAdA,EAAMC,IACuB,gBAAzBb,EAAMtB,KAAKH,UACX+B,OAAOC,SAASG,SACgB,qBAAzBV,EAAMtB,KAAKH,UAClB+B,OAAOC,SAASC,KACZ,+CAEJR,EAAMtB,KAAKH,UAAY,UACvBW,UACIS,KACA,qDACA,IACFH,MAAMsB,IACJ7B,YAAW,KACP6B,EAASpC,KAAKqC,eAAejB,WAC9B,SAIXE,EAAMtB,KAAKH,WAAaqC,EAAMC,OAGtCxC,SAASsC,iBAAiB,WAAYC,KAEf,cAAdA,EAAMC,KAAqC,WAAdD,EAAMC,MACpCb,EAAMtB,KAAKH,UAAUS,OAAS,IAE9BgB,EAAMtB,KAAKH,UAAYyB,EAAMtB,KAAKH,UAAUyC,UACxC,EACAhB,EAAMtB,KAAKH,UAAUS,OAAS,OAe1CiC,aAXqB,KACjB,MAAMC,EAAMlB,EAAMtB,KAAKH,UAAUyC,UAAU,GAC3CP,EAAiBP,MAAMiB,QACnBV,EAAiBlC,UAAU6C,WAAWF,GAChC,SACA,OACVd,EAAqBF,MAAMiB,QACvBf,EAAqB7B,UAAU6C,WAAWF,GACpC,SACA,SAEWG,KAAKC,MAAO,YAG9C,UAER,SAER","sources":["src/ts/index.ts"],"sourcesContent":["const createEl = (tag: keyof HTMLElementTagNameMap, className: string, content?: string) => {\n    const el = document.createElement(tag)\n    el.className = className\n    el.innerHTML = content || \"\"\n    return el\n}\n\nfunction typewrite(element: HTMLElement, text: string, time: number): Promise<void> {\n    return new Promise((res) => {\n        element.innerHTML = \"\"\n        let index = 0\n        const write = () => {\n            if (index < text.length) {\n                index++\n                element.innerHTML += text[index - 1]\n                setTimeout(write, time)\n            } else {\n                res()\n            }\n        }\n        setTimeout(write, time)\n    })\n}\n\nfunction writeLine(\n    element: HTMLElement,\n    text: string,\n    time: number\n): Promise<{ user: HTMLElement; text: HTMLElement; cursor: HTMLElement }> {\n    return new Promise((res) => {\n        const line = createEl(\"div\", \"terminal-line\")\n        const userEl = createEl(\"div\", \"terminal-user\", \"techterm@127.0.0.1:~$ \")\n        line.appendChild(userEl)\n        const textEl = createEl(\"div\", \"terminal-text\", \"\")\n        line.appendChild(textEl)\n        const cursorEl = createEl(\"div\", \"terminal-cursor\", \"&nbsp;\")\n        line.appendChild(cursorEl)\n        element.appendChild(line)\n        typewrite(textEl, text, time).then(() =>\n            res({ user: userEl, text: textEl, cursor: cursorEl })\n        )\n    })\n}\n\nconst root = document.getElementById(\"terminal\")\n\nif (root) {\n    setTimeout(() => {\n        writeLine(root, \"Oh noes!\", 50).then((line1) =>\n            setTimeout(() => {\n                line1.cursor.remove()\n                writeLine(\n                    root,\n                    \"It appears that this page never existed, maybe you wanted to go home?\",\n                    50\n                ).then((line2) => {\n                    setTimeout(() => {\n                        line2.cursor.remove()\n                        writeLine(root, \"sudo re\", 100).then((line3) => {\n                            writeLine(root, \"\", 0).then((suggestions) => {\n                                suggestions.user.style.visibility = \"hidden\"\n                                suggestions.cursor.remove()\n                                const returnHomeSuggestion = createEl(\n                                    \"button\",\n                                    \"terminal-suggestion\",\n                                    \"return-home\"\n                                )\n                                returnHomeSuggestion.onclick = () => {\n                                    line3.text.innerHTML = \"sudo return-home\"\n                                    window.location.href =\n                                        \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n                                }\n\n                                const reloadSuggestion = createEl(\n                                    \"button\",\n                                    \"terminal-suggestion\",\n                                    \"reload\"\n                                )\n                                reloadSuggestion.onclick = () => {\n                                    line3.text.innerHTML = \"sudo reload\"\n                                    window.location.reload()\n                                }\n\n                                suggestions.text.appendChild(returnHomeSuggestion)\n                                suggestions.text.appendChild(reloadSuggestion)\n\n                                document.addEventListener(\"keypress\", (event) => {\n                                    if (event.key === \"Enter\") {\n                                        if (line3.text.innerHTML === \"sudo reload\") {\n                                            window.location.reload()\n                                        } else if (line3.text.innerHTML === \"sudo return-home\") {\n                                            window.location.href =\n                                                \"https://www.youtube.com/watch?v=dQw4w9WgXcQ\"\n                                        } else {\n                                            line3.text.innerHTML = \"sudo re\"\n                                            writeLine(\n                                                root,\n                                                \"Unknown command! Please look at the suggestions...\",\n                                                50\n                                            ).then((response) => {\n                                                setTimeout(() => {\n                                                    response.text.parentElement?.remove()\n                                                }, 2000)\n                                            })\n                                        }\n                                    } else {\n                                        line3.text.innerHTML += event.key\n                                    }\n                                })\n                                document.addEventListener(\"keydown\", (event) => {\n                                    if (\n                                        (event.key === \"Backspace\" || event.key === \"Delete\") &&\n                                        line3.text.innerHTML.length > 5\n                                    ) {\n                                        line3.text.innerHTML = line3.text.innerHTML.substring(\n                                            0,\n                                            line3.text.innerHTML.length - 1\n                                        )\n                                    }\n                                })\n                                const handleChange = () => {\n                                    const cmd = line3.text.innerHTML.substring(5)\n                                    reloadSuggestion.style.display =\n                                        reloadSuggestion.innerHTML.startsWith(cmd)\n                                            ? \"inline\"\n                                            : \"none\"\n                                    returnHomeSuggestion.style.display =\n                                        returnHomeSuggestion.innerHTML.startsWith(cmd)\n                                            ? \"inline\"\n                                            : \"none\"\n                                }\n                                setInterval(handleChange.bind(this), 50)\n                            })\n                        })\n                    }, 500)\n                })\n            }, 500)\n        )\n    }, 500)\n}\n"],"names":["createEl","tag","className","content","el","document","createElement","innerHTML","typewrite","element","text","time","Promise","res","index","write","length","setTimeout","writeLine","line","userEl","appendChild","textEl","cursorEl","then","user","cursor","root","getElementById","line1","remove","line2","line3","suggestions","style","visibility","returnHomeSuggestion","onclick","window","location","href","reloadSuggestion","reload","addEventListener","event","key","response","parentElement","substring","setInterval","cmd","display","startsWith","bind","this"],"version":3,"file":"index.8baa211c.js.map"}